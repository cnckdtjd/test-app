---
description: 
globs: 
alwaysApply: false
---
# 컨트롤러 매핑 구조 가이드

이 애플리케이션은 RESTful 원칙을 따르는 URL 매핑 체계를 갖추고 있으며, 각 기능별 엔드포인트는 다음과 같이 구성되어 있습니다.

## 홈 및 기본 경로
- [HomeController.java](mdc:src/main/java/com/jacob/testapp/common/controller/HomeController.java)
  - `GET /` - 기본 리다이렉트 (인증 상태에 따라 홈/관리자/로그인 페이지로 이동)
  - `GET /home` - 메인 홈페이지 (인증된 사용자용)
  - `GET /login` - 로그인 페이지
  - `GET /register` - 회원가입 페이지

## 장바구니 관련 경로
- [CartController.java](mdc:src/main/java/com/jacob/testapp/cart/controller/CartController.java)
  - `GET /cart` - 장바구니 보기
  - `POST /cart/add` - 상품을 장바구니에 추가
  - `POST /cart/remove` - 장바구니에서 상품 제거
  - `POST /cart/update` - 장바구니 상품 수량 업데이트
  - `POST /cart/clear` - 장바구니 비우기

## 상품 관련 경로
- [ProductController.java](mdc:src/main/java/com/jacob/testapp/product/controller/ProductController.java)
  - `GET /products` - 상품 목록 조회 (필터링/정렬/페이징 지원)
  - `GET /products/{id}` - 특정 상품 상세 정보
  - `GET /products/delay/{id}` - 부하 테스트용 지연 응답

- [ProductAdminController.java](mdc:src/main/java/com/jacob/testapp/product/controller/ProductAdminController.java)
  - `GET /admin/products` - 관리자용 상품 목록
  - `GET /admin/products/create` - 상품 등록 폼
  - `POST /admin/products` - 상품 등록 처리
  - `GET /admin/products/{id}/edit` - 상품 수정 폼
  - `POST /admin/products/{id}` - 상품 수정 처리
  - `POST /admin/products/{id}/delete` - 상품 삭제

## 사용자 관련 경로
- [UserController.java](mdc:src/main/java/com/jacob/testapp/user/controller/UserController.java)
  - `GET /users/profile` - 사용자 프로필 보기
  - `POST /users/profile` - 프로필 업데이트
  - `GET /users/register` - 회원가입 폼
  - `POST /users/register` - 회원가입 처리
  - `GET /users/edit` - 프로필 수정 폼
  - `POST /users/edit` - 프로필 수정 처리

## 주문 관련 경로
- [OrderController.java](mdc:src/main/java/com/jacob/testapp/order/controller/OrderController.java)
  - `GET /orders` - 주문 내역 목록
  - `GET /orders/{id}` - 주문 상세 정보
  - `GET /orders/checkout` - 결제 페이지
  - `POST /orders/create-and-pay` - 주문 생성 및 결제
  - `GET /orders/complete` - 주문 완료 페이지
  - `POST /orders/{id}/cancel` - 주문 취소
  - `POST /orders/{id}/pay` - 결제 처리 (AJAX)
  - `POST /orders/{id}/delete` - 주문 삭제

## 트랜잭션 처리 고려사항
- 모든 POST 요청은 트랜잭션으로 처리되어야 합니다.
- 컨트롤러에서 상태 변경을 담당하는 엔드포인트는 서비스 레이어의 트랜잭션으로 위임합니다.
- 조회(GET) 요청은 트랜잭션 속성 readOnly=true를 적용합니다.

## 에러 처리
- [CustomErrorController.java](mdc:src/main/java/com/jacob/testapp/common/controller/CustomErrorController.java)
  - 모든 예외와 HTTP 오류를 처리합니다.
  - API 응답과 웹 페이지 응답을 컨텐츠 타입에 따라 적절히
 제공합니다.
