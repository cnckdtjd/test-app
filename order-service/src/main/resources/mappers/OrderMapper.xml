<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jacob.orderservice.repository.OrderMapper">
    
    <!-- 결과 매핑 정의 -->
    <resultMap id="orderResultMap" type="com.jacob.orderservice.model.Order">
        <id property="id" column="id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="userId" column="user_id"/>
        <result property="userEmail" column="user_email"/>
        <result property="userName" column="user_name"/>
        <result property="status" column="status"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="email" column="email"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="receiverName" column="receiver_name"/>
        <result property="receiverPhone" column="receiver_phone"/>
        <result property="receiverZipcode" column="receiver_zipcode"/>
        <result property="receiverAddress1" column="receiver_address1"/>
        <result property="receiverAddress2" column="receiver_address2"/>
        <result property="deliveryMessage" column="delivery_message"/>
        <result property="trackingNumber" column="tracking_number"/>
        <result property="carrier" column="carrier"/>
        <result property="adminMemo" column="admin_memo"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="subtotalAmount" column="subtotal_amount"/>
        <result property="shippingAmount" column="shipping_amount"/>
        <result property="discountAmount" column="discount_amount"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="version" column="version"/>
    </resultMap>

    <!-- 공통 컬럼 -->
    <sql id="orderColumns">
        id, order_number, user_id, user_email, user_name, status, payment_method, email,
        phone_number, receiver_name, receiver_phone, receiver_zipcode, receiver_address1,
        receiver_address2, delivery_message, tracking_number, carrier, admin_memo,
        total_amount, subtotal_amount, shipping_amount, discount_amount,
        created_at, updated_at, version
    </sql>

    <!-- 조회 쿼리 -->
    <select id="findById" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            id = #{id}
    </select>

    <select id="findByOrderNumber" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            order_number = #{orderNumber}
    </select>

    <select id="findByUserIdOrderByCreatedAtDesc" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            user_id = #{userId}
        ORDER BY 
            created_at DESC
    </select>

    <select id="findAll" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        ORDER BY 
            created_at DESC
    </select>

    <select id="findAllWithPagination" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByStatus" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            status = #{status}
        ORDER BY 
            created_at DESC
    </select>

    <select id="findByStatusWithPagination" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            status = #{status}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByUserId" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            user_id = #{userId}
        ORDER BY 
            created_at DESC
    </select>

    <select id="findByUserIdWithPagination" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            user_id = #{userId}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByOrderNumberContaining" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            order_number LIKE CONCAT('%', #{orderNumber}, '%')
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByCreatedAtBetween" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            created_at BETWEEN #{startDate} AND #{endDate}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByOrderNumberContainingAndStatus" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            order_number LIKE CONCAT('%', #{orderNumber}, '%')
            AND status = #{status}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByStatusAndCreatedAtBetween" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            status = #{status}
            AND created_at BETWEEN #{startDate} AND #{endDate}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByOrderNumberContainingAndCreatedAtBetween" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            order_number LIKE CONCAT('%', #{orderNumber}, '%')
            AND created_at BETWEEN #{startDate} AND #{endDate}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByOrderNumberContainingAndStatusAndCreatedAtBetween" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            order_number LIKE CONCAT('%', #{orderNumber}, '%')
            AND status = #{status}
            AND created_at BETWEEN #{startDate} AND #{endDate}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByUserIdAndStatusNot" resultMap="orderResultMap">
        SELECT 
            <include refid="orderColumns" />
        FROM 
            orders
        WHERE 
            user_id = #{userId}
            AND status != #{status}
        ORDER BY 
            created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 카운트 쿼리 -->
    <select id="countAll" resultType="long">
        SELECT COUNT(*) FROM orders
    </select>

    <select id="countByStatus" resultType="long">
        SELECT COUNT(*) FROM orders WHERE status = #{status}
    </select>

    <select id="countByCreatedAtBetween" resultType="long">
        SELECT COUNT(*) FROM orders WHERE created_at BETWEEN #{startDate} AND #{endDate}
    </select>

    <select id="countByStatusAndCreatedAtBetween" resultType="long">
        SELECT COUNT(*) FROM orders 
        WHERE status = #{status} AND created_at BETWEEN #{startDate} AND #{endDate}
    </select>

    <!-- 통계 쿼리 -->
    <select id="sumTotalAmount" resultType="double">
        SELECT COALESCE(SUM(total_amount), 0) FROM orders
    </select>

    <select id="sumTotalAmountByCreatedAtBetween" resultType="double">
        SELECT COALESCE(SUM(total_amount), 0) FROM orders 
        WHERE created_at BETWEEN #{startDate} AND #{endDate}
    </select>

    <!-- 생성 및 수정 쿼리 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (
            order_number, user_id, user_email, user_name, status, payment_method, email,
            phone_number, receiver_name, receiver_phone, receiver_zipcode, receiver_address1,
            receiver_address2, delivery_message, tracking_number, carrier, admin_memo,
            total_amount, subtotal_amount, shipping_amount, discount_amount,
            created_at, updated_at, version
        ) VALUES (
            #{orderNumber}, #{userId}, #{userEmail}, #{userName}, #{status}, #{paymentMethod}, #{email},
            #{phoneNumber}, #{receiverName}, #{receiverPhone}, #{receiverZipcode}, #{receiverAddress1},
            #{receiverAddress2}, #{deliveryMessage}, #{trackingNumber}, #{carrier}, #{adminMemo},
            #{totalAmount}, #{subtotalAmount}, #{shippingAmount}, #{discountAmount},
            #{createdAt}, #{updatedAt}, #{version}
        )
    </insert>

    <insert id="saveAndGetId" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (
            order_number, user_id, user_email, user_name, status, payment_method, email,
            phone_number, receiver_name, receiver_phone, receiver_zipcode, receiver_address1,
            receiver_address2, delivery_message, tracking_number, carrier, admin_memo,
            total_amount, subtotal_amount, shipping_amount, discount_amount,
            created_at, updated_at, version
        ) VALUES (
            #{orderNumber}, #{userId}, #{userEmail}, #{userName}, #{status}, #{paymentMethod}, #{email},
            #{phoneNumber}, #{receiverName}, #{receiverPhone}, #{receiverZipcode}, #{receiverAddress1},
            #{receiverAddress2}, #{deliveryMessage}, #{trackingNumber}, #{carrier}, #{adminMemo},
            #{totalAmount}, #{subtotalAmount}, #{shippingAmount}, #{discountAmount},
            #{createdAt}, #{updatedAt}, #{version}
        )
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="update">
        UPDATE orders
        SET 
            user_email = #{userEmail},
            user_name = #{userName},
            status = #{status},
            payment_method = #{paymentMethod},
            email = #{email},
            phone_number = #{phoneNumber},
            receiver_name = #{receiverName},
            receiver_phone = #{receiverPhone},
            receiver_zipcode = #{receiverZipcode},
            receiver_address1 = #{receiverAddress1},
            receiver_address2 = #{receiverAddress2},
            delivery_message = #{deliveryMessage},
            tracking_number = #{trackingNumber},
            carrier = #{carrier},
            admin_memo = #{adminMemo},
            total_amount = #{totalAmount},
            subtotal_amount = #{subtotalAmount},
            shipping_amount = #{shippingAmount},
            discount_amount = #{discountAmount},
            updated_at = #{updatedAt},
            version = version + 1
        WHERE 
            id = #{id}
            AND version = #{version}
    </update>

    <update id="updateStatus">
        UPDATE orders
        SET 
            status = #{status},
            updated_at = NOW(),
            version = version + 1
        WHERE 
            id = #{id}
    </update>

    <update id="markAsDeleted">
        UPDATE orders
        SET 
            status = 'DELETED',
            updated_at = NOW(),
            version = version + 1
        WHERE 
            id = #{id}
    </update>

    <!-- 삭제 쿼리 -->
    <delete id="deleteById">
        DELETE FROM orders WHERE id = #{id}
    </delete>
</mapper> 