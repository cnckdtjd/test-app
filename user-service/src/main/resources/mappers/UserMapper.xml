<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jacob.userservice.repository.UserMapper">
    
    <!-- 결과 매핑 정의 -->
    <resultMap id="userResultMap" type="com.jacob.userservice.model.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="address" column="address"/>
        <result property="role" column="role"/>
        <result property="enabled" column="enabled"/>
        <result property="loginAttempts" column="login_attempts"/>
        <result property="accountLocked" column="account_locked"/>
        <result property="lockTime" column="lock_time"/>
        <result property="cashBalance" column="cash_balance"/>
        <result property="remarks" column="remarks"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="status" column="status"/>
        <result property="lastLoginAt" column="last_login_at"/>
    </resultMap>

    <!-- 공통 컬럼 -->
    <sql id="userColumns">
        id, username, password, name, email, phone, address, role, enabled,
        login_attempts, account_locked, lock_time, cash_balance, remarks,
        created_at, updated_at, status, last_login_at
    </sql>

    <!-- 사용자 조회 -->
    <select id="findById" resultMap="userResultMap">
        SELECT 
            <include refid="userColumns" />
        FROM 
            users
        WHERE 
            id = #{id}
    </select>

    <select id="findByUsername" resultMap="userResultMap">
        SELECT 
            <include refid="userColumns" />
        FROM 
            users
        WHERE 
            username = #{username}
    </select>

    <select id="findByEmail" resultMap="userResultMap">
        SELECT 
            <include refid="userColumns" />
        FROM 
            users
        WHERE 
            email = #{email}
    </select>

    <select id="findAll" resultMap="userResultMap">
        SELECT 
            <include refid="userColumns" />
        FROM 
            users
        ORDER BY 
            id
    </select>

    <select id="findAllWithPagination" resultMap="userResultMap">
        SELECT 
            <include refid="userColumns" />
        FROM 
            users
        ORDER BY 
            id
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countAll" resultType="long">
        SELECT 
            COUNT(*)
        FROM 
            users
    </select>

    <select id="countByStatus" resultType="long">
        SELECT 
            COUNT(*)
        FROM 
            users
        WHERE 
            status = #{status}
    </select>

    <select id="existsByUsername" resultType="boolean">
        SELECT 
            COUNT(*) > 0
        FROM 
            users
        WHERE 
            username = #{username}
    </select>

    <select id="existsByEmail" resultType="boolean">
        SELECT 
            COUNT(*) > 0
        FROM 
            users
        WHERE 
            email = #{email}
    </select>

    <!-- 사용자 생성 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (
            username, password, name, email, phone, address, role, enabled,
            login_attempts, account_locked, lock_time, cash_balance, remarks,
            created_at, updated_at, status, last_login_at
        ) VALUES (
            #{username}, #{password}, #{name}, #{email}, #{phone}, #{address}, #{role}, #{enabled},
            #{loginAttempts}, #{accountLocked}, #{lockTime}, #{cashBalance}, #{remarks},
            #{createdAt}, #{updatedAt}, #{status}, #{lastLoginAt}
        )
    </insert>

    <!-- 사용자 수정 -->
    <update id="update">
        UPDATE 
            users
        SET 
            password = #{password},
            name = #{name},
            email = #{email},
            phone = #{phone},
            address = #{address},
            role = #{role},
            enabled = #{enabled},
            login_attempts = #{loginAttempts},
            account_locked = #{accountLocked},
            lock_time = #{lockTime},
            cash_balance = #{cashBalance},
            remarks = #{remarks},
            updated_at = #{updatedAt},
            status = #{status},
            last_login_at = #{lastLoginAt}
        WHERE 
            id = #{id}
    </update>

    <!-- 로그인 관련 업데이트 -->
    <update id="updateLoginAttempts">
        UPDATE 
            users
        SET 
            login_attempts = #{attempts}
        WHERE 
            username = #{username}
    </update>

    <update id="updateAccountLocked">
        UPDATE 
            users
        SET 
            account_locked = #{locked}
        WHERE 
            username = #{username}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteById">
        DELETE FROM 
            users
        WHERE 
            id = #{id}
    </delete>

    <delete id="deleteByIdBetween">
        DELETE FROM 
            users
        WHERE 
            id >= #{startId} 
            AND id <= #{endId} 
            AND role = 'ROLE_USER'
    </delete>
</mapper> 